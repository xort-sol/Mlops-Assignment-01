name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.10'

  #     - name: Install dependencies
  #       run: |
  #         pip install -r requirements.txt
  #         pip install pytest

  #     - name: Run unit tests
  #       run: |
  #         echo Testing
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Install dependencies
  #       run: pip install flake8

  #     - name: Run linting
  #       run: flake8 .

  # build-and-test:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       environment: [development, staging, production]

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set environment variables
  #       run: echo "ENVIRONMENT=${{ matrix.environment }}" >> $GITHUB_ENV

  #     - name: Run environment-specific build and test
  #       run: |
  #         # Install environment dependencies, run tests
  #         echo "Building and testing for ${{ matrix.environment }}"
          
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy to Vercel (development)
        if: github.ref == 'refs/heads/development'
        run: |
          vercel --prod --token=${{ secrets.VERCEL_TOKEN }} --env=development

      - name: Deploy to Vercel (staging)
        if: github.ref == 'refs/heads/staging'
        run: |
          vercel --prod --token=${{ secrets.VERCEL_TOKEN }} --env=staging

      - name: Deploy to Vercel (production)
        if: github.ref == 'refs/heads/main'
        run: |
          vercel --prod --token=${{ secrets.VERCEL_TOKEN }} --env=production
